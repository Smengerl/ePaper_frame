substitutions:

#-------------------------------------------
# Physical dimensions in frame
# should match dimensions in script (AI requires width/height to be divisible by 8)
#-------------------------------------------
  display_min_pixel_x: '0'     # Left most visible pixel
  display_pixel_width: '480'   # Right most visible pixel
  display_min_pixel_y: '30'     # top most visible pixel
  display_pixel_height: '744'   # bottom most visible pixel -- 
  display_rotation: '90°'




#-------------------------------------------
# Pinning
#-------------------------------------------

  gpio_spi_clk_pin: GPIO13
  gpio_spi_mosi_pin: GPIO14
  
  gpio_cs_pin: GPIO15
  gpio_dc_pin: GPIO27
  gpio_reset_pin: GPIO26
  gpio_busy_pin: GPIO25
  
  # WARNING: The BUSY pin on the gdew0154m09 and Waveshare 7.50in V2 models must be inverted to prevent permanent display damage. 
  gpio_busy_pin_inverted: 'true' 



#-------------------------------------------
# Display configuration
#-------------------------------------------
  # See: https://community.home-assistant.io/t/esphome-waveshare-7-5-inch-e-ink-e-paper-display/399236/23


  # NOT A WORKING CONFIGURATION
  # poor display quality (blurry, unstable)
  # Can’t use with an ESP8266 as it runs out of RAM
  # SUUUPER slow, runs into timeouts
  # ON_COLOR = ???
  # OFF_COLOR = ???
  # RED_COLOR = ???
  # display_model: 7.50inV2 
  # reset_duration: 20ms ### not wirking
  # reset_duration: 2ms ### not working


  # NOT A WORKING CONFIGURATION (B/W/R)
  # Almost unreadable. large artifacts and boxes, wrong pixels
  # ON_COLOR = white
  # OFF_COLOR = black
  # RED_COLOR = red
  # display_model: 7.50in
  # reset_duration: 2ms ##### TRY: 2ms or 20ms


  # WORKING configuration (B/W)
  # alternative version to the above 7.50inV2
  # ON_COLOR = black
  # OFF_COLOR = white
  # RED_COLOR = black
  # display_model: 7.50inV2alt 
  # reset_duration: 2ms 


  # WORKING configuration (B/W only)
  # Fast, very clear/crisp
  # Seems to refresh faster than bV3 but nasty black/white flickering for ~5s on every display refresh. 
  # ON_COLOR = black
  # OFF_COLOR = white
  # RED_COLOR = black
  # display_model: 7.50in-bV2 # also supports v3, B/W rendering only 
  # reset_duration: 2ms ##### TRY: 2ms or 20ms


  # WORKING configuration (B/W only)
  # display with the ‘(V3)’ sticker on the back, B/W rendering only
  # Fast, very clear/crisp
  # No flickering
  # ON_COLOR = black
  # OFF_COLOR = white
  # RED_COLOR = black
  display_model: 7.50in-bV3 
  reset_duration: 2ms ##### TRY: 2ms or 20ms


  #display_model: 7.50in-bc # display with version sticker ‘(C)’ on the back, B/W rendering only
  # display_model: 7.50in-hd-b # Can’t use with an ESP8266 as it runs out of RAM


  # B/W/R display
  # WARNING: Requires external componend, not supported in main branch
  # display_model: 7.50in-bv2-rb




## Support for red in display not yet in main branch
# See: https://github.com/esphome/feature-requests/issues/239
#external_components:
#  - source:
#      type: git
#      url: https://github.com/twisterss/esphome-dev.git
#      ref: waveshare-red-black
#    components: [ waveshare_epaper ]
# NOT WORKING: Currently does not have support for manual refresh via component.update on display as function is declared private!








esp32:
  board: esp32dev
  framework:
    type: esp-idf


# Option to enable PSRAM, see https://esphome.io/components/psram.html
# Only available on ESP32, not availbe on waveshare's display hat
# Required for online image component
#psram:
#  mode: octal
#  speed: 80MHz







# Enable logging
logger:

# Enable Home Assistant API
#api:
#  encryption:
#    key: ${api_key}

ota:
  platform: esphome
  password: ${ota_pw}

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${fallback_hotspot_ssid} 
    password: ${fallback_hotspot_pw} 


# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

# Displays a notification in case the device need to be updated
dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
#esp32_improv:
#  authorizer: none

# To have a "next url" for improv serial
#web_server:
#  port: 80
#  version: 3


# Pins for Waveshare ePaper ESP Board
spi:
  clk_pin: $gpio_spi_clk_pin
  mosi_pin: $gpio_spi_mosi_pin
  id: epaper_display

